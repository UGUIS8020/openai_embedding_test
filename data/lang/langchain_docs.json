[
  {
    "url": "https://python.langchain.com/docs/get_started/introduction",
    "content": "On this pageLangChainis a framework for developing applications powered by large language models (LLMs).LangChain simplifies every stage of the LLM application lifecycle:Development: Build your applications using LangChain's open-sourcebuilding blocks,components, andthird-party integrations.\nUseLangGraphto build stateful agents with first-class streaming and human-in-the-loop support.Productionization: UseLangSmithto inspect, monitor and evaluate your chains, so that you can continuously optimize and deploy with confidence.Deployment: Turn your LangGraph applications into production-ready APIs and Assistants withLangGraph Cloud.Concretely, the framework consists of the following open-source libraries:langchain-core: Base abstractions and LangChain Expression Language.langchain-community: Third party integrations.Partner packages (e.g.langchain-openai,langchain-anthropic, etc.): Some integrations have been further split into their own lightweight packages that only depend onlangchain-core.langchain: Chains, agents, and retrieval strategies that make up an application's cognitive architecture.LangGraph: Build robust and stateful multi-actor applications with LLMs by modeling steps as edges and nodes in a graph. Integrates smoothly with LangChain, but can be used without it.LangServe: Deploy LangChain chains as REST APIs.LangSmith: A developer platform that lets you debug, test, evaluate, and monitor LLM applications.noteThese docs focus on the Python LangChain library.Head herefor docs on the JavaScript LangChain library.Tutorials​If you're looking to build something specific or are more of a hands-on learner, check out ourtutorials section.\nThis is the best place to get started.These are the best ones to get started with:Build a Simple LLM ApplicationBuild a ChatbotBuild an AgentIntroduction to LangGraphExplore the full list of LangChain tutorialshere, and check out otherLangGraph tutorials here. To learn more about LangGraph, check out our first LangChain Academy course,Introduction to LangGraph, availablehere.How-to guides​Hereyou’ll find short answers to “How do I….?” types of questions.\nThese how-to guides don’t cover topics in depth – you’ll find that material in theTutorialsand theAPI Reference.\nHowever, these guides will help you quickly accomplish common tasks.Check outLangGraph-specific how-tos here.Conceptual guide​Introductions to all the key parts of LangChain you’ll need to know!Hereyou'll find high level explanations of all LangChain concepts.For a deeper dive into LangGraph concepts, check outthis page.API reference​Head to the reference section for full documentation of all classes and methods in the LangChain Python packages.Ecosystem​🦜🛠️ LangSmith​Trace and evaluate your language model applications and intelligent agents to help you move from prototype to production.🦜🕸️ LangGraph​Build stateful, multi-actor applications with LLMs. Integrates smoothly with LangChain, but can be used without it.Additional resources​Versions​See what changed in v0.3, learn how to migrate legacy code, read up on our versioning policies, and more.Security​Read up onsecuritybest practices to make sure you're developing safely with LangChain.Integrations​LangChain is part of a rich ecosystem of tools that integrate with our framework and build on top of it. Check out our growing list ofintegrations.Contributing​Check out the developer's guide for guidelines on contributing and help getting your dev environment set up.Was this page helpful?TutorialsHow-to guidesConceptual guideAPI referenceEcosystem🦜🛠️ LangSmith🦜🕸️ LangGraphAdditional resourcesVersionsSecurityIntegrationsContributing"
  },
  {
    "url": "https://python.langchain.com/docs/get_started/introduction#__docusaurus_skipToContent_fallback",
    "content": "On this pageLangChainis a framework for developing applications powered by large language models (LLMs).LangChain simplifies every stage of the LLM application lifecycle:Development: Build your applications using LangChain's open-sourcebuilding blocks,components, andthird-party integrations.\nUseLangGraphto build stateful agents with first-class streaming and human-in-the-loop support.Productionization: UseLangSmithto inspect, monitor and evaluate your chains, so that you can continuously optimize and deploy with confidence.Deployment: Turn your LangGraph applications into production-ready APIs and Assistants withLangGraph Cloud.Concretely, the framework consists of the following open-source libraries:langchain-core: Base abstractions and LangChain Expression Language.langchain-community: Third party integrations.Partner packages (e.g.langchain-openai,langchain-anthropic, etc.): Some integrations have been further split into their own lightweight packages that only depend onlangchain-core.langchain: Chains, agents, and retrieval strategies that make up an application's cognitive architecture.LangGraph: Build robust and stateful multi-actor applications with LLMs by modeling steps as edges and nodes in a graph. Integrates smoothly with LangChain, but can be used without it.LangServe: Deploy LangChain chains as REST APIs.LangSmith: A developer platform that lets you debug, test, evaluate, and monitor LLM applications.noteThese docs focus on the Python LangChain library.Head herefor docs on the JavaScript LangChain library.Tutorials​If you're looking to build something specific or are more of a hands-on learner, check out ourtutorials section.\nThis is the best place to get started.These are the best ones to get started with:Build a Simple LLM ApplicationBuild a ChatbotBuild an AgentIntroduction to LangGraphExplore the full list of LangChain tutorialshere, and check out otherLangGraph tutorials here. To learn more about LangGraph, check out our first LangChain Academy course,Introduction to LangGraph, availablehere.How-to guides​Hereyou’ll find short answers to “How do I….?” types of questions.\nThese how-to guides don’t cover topics in depth – you’ll find that material in theTutorialsand theAPI Reference.\nHowever, these guides will help you quickly accomplish common tasks.Check outLangGraph-specific how-tos here.Conceptual guide​Introductions to all the key parts of LangChain you’ll need to know!Hereyou'll find high level explanations of all LangChain concepts.For a deeper dive into LangGraph concepts, check outthis page.API reference​Head to the reference section for full documentation of all classes and methods in the LangChain Python packages.Ecosystem​🦜🛠️ LangSmith​Trace and evaluate your language model applications and intelligent agents to help you move from prototype to production.🦜🕸️ LangGraph​Build stateful, multi-actor applications with LLMs. Integrates smoothly with LangChain, but can be used without it.Additional resources​Versions​See what changed in v0.3, learn how to migrate legacy code, read up on our versioning policies, and more.Security​Read up onsecuritybest practices to make sure you're developing safely with LangChain.Integrations​LangChain is part of a rich ecosystem of tools that integrate with our framework and build on top of it. Check out our growing list ofintegrations.Contributing​Check out the developer's guide for guidelines on contributing and help getting your dev environment set up.Was this page helpful?TutorialsHow-to guidesConceptual guideAPI referenceEcosystem🦜🛠️ LangSmith🦜🕸️ LangGraphAdditional resourcesVersionsSecurityIntegrationsContributing"
  },
  {
    "url": "https://python.langchain.com/docs/get_started/introduction#tutorials",
    "content": "On this pageLangChainis a framework for developing applications powered by large language models (LLMs).LangChain simplifies every stage of the LLM application lifecycle:Development: Build your applications using LangChain's open-sourcebuilding blocks,components, andthird-party integrations.\nUseLangGraphto build stateful agents with first-class streaming and human-in-the-loop support.Productionization: UseLangSmithto inspect, monitor and evaluate your chains, so that you can continuously optimize and deploy with confidence.Deployment: Turn your LangGraph applications into production-ready APIs and Assistants withLangGraph Cloud.Concretely, the framework consists of the following open-source libraries:langchain-core: Base abstractions and LangChain Expression Language.langchain-community: Third party integrations.Partner packages (e.g.langchain-openai,langchain-anthropic, etc.): Some integrations have been further split into their own lightweight packages that only depend onlangchain-core.langchain: Chains, agents, and retrieval strategies that make up an application's cognitive architecture.LangGraph: Build robust and stateful multi-actor applications with LLMs by modeling steps as edges and nodes in a graph. Integrates smoothly with LangChain, but can be used without it.LangServe: Deploy LangChain chains as REST APIs.LangSmith: A developer platform that lets you debug, test, evaluate, and monitor LLM applications.noteThese docs focus on the Python LangChain library.Head herefor docs on the JavaScript LangChain library.Tutorials​If you're looking to build something specific or are more of a hands-on learner, check out ourtutorials section.\nThis is the best place to get started.These are the best ones to get started with:Build a Simple LLM ApplicationBuild a ChatbotBuild an AgentIntroduction to LangGraphExplore the full list of LangChain tutorialshere, and check out otherLangGraph tutorials here. To learn more about LangGraph, check out our first LangChain Academy course,Introduction to LangGraph, availablehere.How-to guides​Hereyou’ll find short answers to “How do I….?” types of questions.\nThese how-to guides don’t cover topics in depth – you’ll find that material in theTutorialsand theAPI Reference.\nHowever, these guides will help you quickly accomplish common tasks.Check outLangGraph-specific how-tos here.Conceptual guide​Introductions to all the key parts of LangChain you’ll need to know!Hereyou'll find high level explanations of all LangChain concepts.For a deeper dive into LangGraph concepts, check outthis page.API reference​Head to the reference section for full documentation of all classes and methods in the LangChain Python packages.Ecosystem​🦜🛠️ LangSmith​Trace and evaluate your language model applications and intelligent agents to help you move from prototype to production.🦜🕸️ LangGraph​Build stateful, multi-actor applications with LLMs. Integrates smoothly with LangChain, but can be used without it.Additional resources​Versions​See what changed in v0.3, learn how to migrate legacy code, read up on our versioning policies, and more.Security​Read up onsecuritybest practices to make sure you're developing safely with LangChain.Integrations​LangChain is part of a rich ecosystem of tools that integrate with our framework and build on top of it. Check out our growing list ofintegrations.Contributing​Check out the developer's guide for guidelines on contributing and help getting your dev environment set up.Was this page helpful?TutorialsHow-to guidesConceptual guideAPI referenceEcosystem🦜🛠️ LangSmith🦜🕸️ LangGraphAdditional resourcesVersionsSecurityIntegrationsContributing"
  },
  {
    "url": "https://python.langchain.com/docs/get_started/introduction#how-to-guides",
    "content": "On this pageLangChainis a framework for developing applications powered by large language models (LLMs).LangChain simplifies every stage of the LLM application lifecycle:Development: Build your applications using LangChain's open-sourcebuilding blocks,components, andthird-party integrations.\nUseLangGraphto build stateful agents with first-class streaming and human-in-the-loop support.Productionization: UseLangSmithto inspect, monitor and evaluate your chains, so that you can continuously optimize and deploy with confidence.Deployment: Turn your LangGraph applications into production-ready APIs and Assistants withLangGraph Cloud.Concretely, the framework consists of the following open-source libraries:langchain-core: Base abstractions and LangChain Expression Language.langchain-community: Third party integrations.Partner packages (e.g.langchain-openai,langchain-anthropic, etc.): Some integrations have been further split into their own lightweight packages that only depend onlangchain-core.langchain: Chains, agents, and retrieval strategies that make up an application's cognitive architecture.LangGraph: Build robust and stateful multi-actor applications with LLMs by modeling steps as edges and nodes in a graph. Integrates smoothly with LangChain, but can be used without it.LangServe: Deploy LangChain chains as REST APIs.LangSmith: A developer platform that lets you debug, test, evaluate, and monitor LLM applications.noteThese docs focus on the Python LangChain library.Head herefor docs on the JavaScript LangChain library.Tutorials​If you're looking to build something specific or are more of a hands-on learner, check out ourtutorials section.\nThis is the best place to get started.These are the best ones to get started with:Build a Simple LLM ApplicationBuild a ChatbotBuild an AgentIntroduction to LangGraphExplore the full list of LangChain tutorialshere, and check out otherLangGraph tutorials here. To learn more about LangGraph, check out our first LangChain Academy course,Introduction to LangGraph, availablehere.How-to guides​Hereyou’ll find short answers to “How do I….?” types of questions.\nThese how-to guides don’t cover topics in depth – you’ll find that material in theTutorialsand theAPI Reference.\nHowever, these guides will help you quickly accomplish common tasks.Check outLangGraph-specific how-tos here.Conceptual guide​Introductions to all the key parts of LangChain you’ll need to know!Hereyou'll find high level explanations of all LangChain concepts.For a deeper dive into LangGraph concepts, check outthis page.API reference​Head to the reference section for full documentation of all classes and methods in the LangChain Python packages.Ecosystem​🦜🛠️ LangSmith​Trace and evaluate your language model applications and intelligent agents to help you move from prototype to production.🦜🕸️ LangGraph​Build stateful, multi-actor applications with LLMs. Integrates smoothly with LangChain, but can be used without it.Additional resources​Versions​See what changed in v0.3, learn how to migrate legacy code, read up on our versioning policies, and more.Security​Read up onsecuritybest practices to make sure you're developing safely with LangChain.Integrations​LangChain is part of a rich ecosystem of tools that integrate with our framework and build on top of it. Check out our growing list ofintegrations.Contributing​Check out the developer's guide for guidelines on contributing and help getting your dev environment set up.Was this page helpful?TutorialsHow-to guidesConceptual guideAPI referenceEcosystem🦜🛠️ LangSmith🦜🕸️ LangGraphAdditional resourcesVersionsSecurityIntegrationsContributing"
  },
  {
    "url": "https://python.langchain.com/docs/get_started/introduction#conceptual-guide",
    "content": "On this pageLangChainis a framework for developing applications powered by large language models (LLMs).LangChain simplifies every stage of the LLM application lifecycle:Development: Build your applications using LangChain's open-sourcebuilding blocks,components, andthird-party integrations.\nUseLangGraphto build stateful agents with first-class streaming and human-in-the-loop support.Productionization: UseLangSmithto inspect, monitor and evaluate your chains, so that you can continuously optimize and deploy with confidence.Deployment: Turn your LangGraph applications into production-ready APIs and Assistants withLangGraph Cloud.Concretely, the framework consists of the following open-source libraries:langchain-core: Base abstractions and LangChain Expression Language.langchain-community: Third party integrations.Partner packages (e.g.langchain-openai,langchain-anthropic, etc.): Some integrations have been further split into their own lightweight packages that only depend onlangchain-core.langchain: Chains, agents, and retrieval strategies that make up an application's cognitive architecture.LangGraph: Build robust and stateful multi-actor applications with LLMs by modeling steps as edges and nodes in a graph. Integrates smoothly with LangChain, but can be used without it.LangServe: Deploy LangChain chains as REST APIs.LangSmith: A developer platform that lets you debug, test, evaluate, and monitor LLM applications.noteThese docs focus on the Python LangChain library.Head herefor docs on the JavaScript LangChain library.Tutorials​If you're looking to build something specific or are more of a hands-on learner, check out ourtutorials section.\nThis is the best place to get started.These are the best ones to get started with:Build a Simple LLM ApplicationBuild a ChatbotBuild an AgentIntroduction to LangGraphExplore the full list of LangChain tutorialshere, and check out otherLangGraph tutorials here. To learn more about LangGraph, check out our first LangChain Academy course,Introduction to LangGraph, availablehere.How-to guides​Hereyou’ll find short answers to “How do I….?” types of questions.\nThese how-to guides don’t cover topics in depth – you’ll find that material in theTutorialsand theAPI Reference.\nHowever, these guides will help you quickly accomplish common tasks.Check outLangGraph-specific how-tos here.Conceptual guide​Introductions to all the key parts of LangChain you’ll need to know!Hereyou'll find high level explanations of all LangChain concepts.For a deeper dive into LangGraph concepts, check outthis page.API reference​Head to the reference section for full documentation of all classes and methods in the LangChain Python packages.Ecosystem​🦜🛠️ LangSmith​Trace and evaluate your language model applications and intelligent agents to help you move from prototype to production.🦜🕸️ LangGraph​Build stateful, multi-actor applications with LLMs. Integrates smoothly with LangChain, but can be used without it.Additional resources​Versions​See what changed in v0.3, learn how to migrate legacy code, read up on our versioning policies, and more.Security​Read up onsecuritybest practices to make sure you're developing safely with LangChain.Integrations​LangChain is part of a rich ecosystem of tools that integrate with our framework and build on top of it. Check out our growing list ofintegrations.Contributing​Check out the developer's guide for guidelines on contributing and help getting your dev environment set up.Was this page helpful?TutorialsHow-to guidesConceptual guideAPI referenceEcosystem🦜🛠️ LangSmith🦜🕸️ LangGraphAdditional resourcesVersionsSecurityIntegrationsContributing"
  },
  {
    "url": "https://python.langchain.com/docs/get_started/introduction#api-reference",
    "content": "On this pageLangChainis a framework for developing applications powered by large language models (LLMs).LangChain simplifies every stage of the LLM application lifecycle:Development: Build your applications using LangChain's open-sourcebuilding blocks,components, andthird-party integrations.\nUseLangGraphto build stateful agents with first-class streaming and human-in-the-loop support.Productionization: UseLangSmithto inspect, monitor and evaluate your chains, so that you can continuously optimize and deploy with confidence.Deployment: Turn your LangGraph applications into production-ready APIs and Assistants withLangGraph Cloud.Concretely, the framework consists of the following open-source libraries:langchain-core: Base abstractions and LangChain Expression Language.langchain-community: Third party integrations.Partner packages (e.g.langchain-openai,langchain-anthropic, etc.): Some integrations have been further split into their own lightweight packages that only depend onlangchain-core.langchain: Chains, agents, and retrieval strategies that make up an application's cognitive architecture.LangGraph: Build robust and stateful multi-actor applications with LLMs by modeling steps as edges and nodes in a graph. Integrates smoothly with LangChain, but can be used without it.LangServe: Deploy LangChain chains as REST APIs.LangSmith: A developer platform that lets you debug, test, evaluate, and monitor LLM applications.noteThese docs focus on the Python LangChain library.Head herefor docs on the JavaScript LangChain library.Tutorials​If you're looking to build something specific or are more of a hands-on learner, check out ourtutorials section.\nThis is the best place to get started.These are the best ones to get started with:Build a Simple LLM ApplicationBuild a ChatbotBuild an AgentIntroduction to LangGraphExplore the full list of LangChain tutorialshere, and check out otherLangGraph tutorials here. To learn more about LangGraph, check out our first LangChain Academy course,Introduction to LangGraph, availablehere.How-to guides​Hereyou’ll find short answers to “How do I….?” types of questions.\nThese how-to guides don’t cover topics in depth – you’ll find that material in theTutorialsand theAPI Reference.\nHowever, these guides will help you quickly accomplish common tasks.Check outLangGraph-specific how-tos here.Conceptual guide​Introductions to all the key parts of LangChain you’ll need to know!Hereyou'll find high level explanations of all LangChain concepts.For a deeper dive into LangGraph concepts, check outthis page.API reference​Head to the reference section for full documentation of all classes and methods in the LangChain Python packages.Ecosystem​🦜🛠️ LangSmith​Trace and evaluate your language model applications and intelligent agents to help you move from prototype to production.🦜🕸️ LangGraph​Build stateful, multi-actor applications with LLMs. Integrates smoothly with LangChain, but can be used without it.Additional resources​Versions​See what changed in v0.3, learn how to migrate legacy code, read up on our versioning policies, and more.Security​Read up onsecuritybest practices to make sure you're developing safely with LangChain.Integrations​LangChain is part of a rich ecosystem of tools that integrate with our framework and build on top of it. Check out our growing list ofintegrations.Contributing​Check out the developer's guide for guidelines on contributing and help getting your dev environment set up.Was this page helpful?TutorialsHow-to guidesConceptual guideAPI referenceEcosystem🦜🛠️ LangSmith🦜🕸️ LangGraphAdditional resourcesVersionsSecurityIntegrationsContributing"
  },
  {
    "url": "https://python.langchain.com/docs/get_started/introduction#ecosystem",
    "content": "On this pageLangChainis a framework for developing applications powered by large language models (LLMs).LangChain simplifies every stage of the LLM application lifecycle:Development: Build your applications using LangChain's open-sourcebuilding blocks,components, andthird-party integrations.\nUseLangGraphto build stateful agents with first-class streaming and human-in-the-loop support.Productionization: UseLangSmithto inspect, monitor and evaluate your chains, so that you can continuously optimize and deploy with confidence.Deployment: Turn your LangGraph applications into production-ready APIs and Assistants withLangGraph Cloud.Concretely, the framework consists of the following open-source libraries:langchain-core: Base abstractions and LangChain Expression Language.langchain-community: Third party integrations.Partner packages (e.g.langchain-openai,langchain-anthropic, etc.): Some integrations have been further split into their own lightweight packages that only depend onlangchain-core.langchain: Chains, agents, and retrieval strategies that make up an application's cognitive architecture.LangGraph: Build robust and stateful multi-actor applications with LLMs by modeling steps as edges and nodes in a graph. Integrates smoothly with LangChain, but can be used without it.LangServe: Deploy LangChain chains as REST APIs.LangSmith: A developer platform that lets you debug, test, evaluate, and monitor LLM applications.noteThese docs focus on the Python LangChain library.Head herefor docs on the JavaScript LangChain library.Tutorials​If you're looking to build something specific or are more of a hands-on learner, check out ourtutorials section.\nThis is the best place to get started.These are the best ones to get started with:Build a Simple LLM ApplicationBuild a ChatbotBuild an AgentIntroduction to LangGraphExplore the full list of LangChain tutorialshere, and check out otherLangGraph tutorials here. To learn more about LangGraph, check out our first LangChain Academy course,Introduction to LangGraph, availablehere.How-to guides​Hereyou’ll find short answers to “How do I….?” types of questions.\nThese how-to guides don’t cover topics in depth – you’ll find that material in theTutorialsand theAPI Reference.\nHowever, these guides will help you quickly accomplish common tasks.Check outLangGraph-specific how-tos here.Conceptual guide​Introductions to all the key parts of LangChain you’ll need to know!Hereyou'll find high level explanations of all LangChain concepts.For a deeper dive into LangGraph concepts, check outthis page.API reference​Head to the reference section for full documentation of all classes and methods in the LangChain Python packages.Ecosystem​🦜🛠️ LangSmith​Trace and evaluate your language model applications and intelligent agents to help you move from prototype to production.🦜🕸️ LangGraph​Build stateful, multi-actor applications with LLMs. Integrates smoothly with LangChain, but can be used without it.Additional resources​Versions​See what changed in v0.3, learn how to migrate legacy code, read up on our versioning policies, and more.Security​Read up onsecuritybest practices to make sure you're developing safely with LangChain.Integrations​LangChain is part of a rich ecosystem of tools that integrate with our framework and build on top of it. Check out our growing list ofintegrations.Contributing​Check out the developer's guide for guidelines on contributing and help getting your dev environment set up.Was this page helpful?TutorialsHow-to guidesConceptual guideAPI referenceEcosystem🦜🛠️ LangSmith🦜🕸️ LangGraphAdditional resourcesVersionsSecurityIntegrationsContributing"
  },
  {
    "url": "https://python.langchain.com/docs/get_started/introduction#️-langsmith",
    "content": "On this pageLangChainis a framework for developing applications powered by large language models (LLMs).LangChain simplifies every stage of the LLM application lifecycle:Development: Build your applications using LangChain's open-sourcebuilding blocks,components, andthird-party integrations.\nUseLangGraphto build stateful agents with first-class streaming and human-in-the-loop support.Productionization: UseLangSmithto inspect, monitor and evaluate your chains, so that you can continuously optimize and deploy with confidence.Deployment: Turn your LangGraph applications into production-ready APIs and Assistants withLangGraph Cloud.Concretely, the framework consists of the following open-source libraries:langchain-core: Base abstractions and LangChain Expression Language.langchain-community: Third party integrations.Partner packages (e.g.langchain-openai,langchain-anthropic, etc.): Some integrations have been further split into their own lightweight packages that only depend onlangchain-core.langchain: Chains, agents, and retrieval strategies that make up an application's cognitive architecture.LangGraph: Build robust and stateful multi-actor applications with LLMs by modeling steps as edges and nodes in a graph. Integrates smoothly with LangChain, but can be used without it.LangServe: Deploy LangChain chains as REST APIs.LangSmith: A developer platform that lets you debug, test, evaluate, and monitor LLM applications.noteThese docs focus on the Python LangChain library.Head herefor docs on the JavaScript LangChain library.Tutorials​If you're looking to build something specific or are more of a hands-on learner, check out ourtutorials section.\nThis is the best place to get started.These are the best ones to get started with:Build a Simple LLM ApplicationBuild a ChatbotBuild an AgentIntroduction to LangGraphExplore the full list of LangChain tutorialshere, and check out otherLangGraph tutorials here. To learn more about LangGraph, check out our first LangChain Academy course,Introduction to LangGraph, availablehere.How-to guides​Hereyou’ll find short answers to “How do I….?” types of questions.\nThese how-to guides don’t cover topics in depth – you’ll find that material in theTutorialsand theAPI Reference.\nHowever, these guides will help you quickly accomplish common tasks.Check outLangGraph-specific how-tos here.Conceptual guide​Introductions to all the key parts of LangChain you’ll need to know!Hereyou'll find high level explanations of all LangChain concepts.For a deeper dive into LangGraph concepts, check outthis page.API reference​Head to the reference section for full documentation of all classes and methods in the LangChain Python packages.Ecosystem​🦜🛠️ LangSmith​Trace and evaluate your language model applications and intelligent agents to help you move from prototype to production.🦜🕸️ LangGraph​Build stateful, multi-actor applications with LLMs. Integrates smoothly with LangChain, but can be used without it.Additional resources​Versions​See what changed in v0.3, learn how to migrate legacy code, read up on our versioning policies, and more.Security​Read up onsecuritybest practices to make sure you're developing safely with LangChain.Integrations​LangChain is part of a rich ecosystem of tools that integrate with our framework and build on top of it. Check out our growing list ofintegrations.Contributing​Check out the developer's guide for guidelines on contributing and help getting your dev environment set up.Was this page helpful?TutorialsHow-to guidesConceptual guideAPI referenceEcosystem🦜🛠️ LangSmith🦜🕸️ LangGraphAdditional resourcesVersionsSecurityIntegrationsContributing"
  },
  {
    "url": "https://python.langchain.com/docs/get_started/introduction#️-langgraph",
    "content": "On this pageLangChainis a framework for developing applications powered by large language models (LLMs).LangChain simplifies every stage of the LLM application lifecycle:Development: Build your applications using LangChain's open-sourcebuilding blocks,components, andthird-party integrations.\nUseLangGraphto build stateful agents with first-class streaming and human-in-the-loop support.Productionization: UseLangSmithto inspect, monitor and evaluate your chains, so that you can continuously optimize and deploy with confidence.Deployment: Turn your LangGraph applications into production-ready APIs and Assistants withLangGraph Cloud.Concretely, the framework consists of the following open-source libraries:langchain-core: Base abstractions and LangChain Expression Language.langchain-community: Third party integrations.Partner packages (e.g.langchain-openai,langchain-anthropic, etc.): Some integrations have been further split into their own lightweight packages that only depend onlangchain-core.langchain: Chains, agents, and retrieval strategies that make up an application's cognitive architecture.LangGraph: Build robust and stateful multi-actor applications with LLMs by modeling steps as edges and nodes in a graph. Integrates smoothly with LangChain, but can be used without it.LangServe: Deploy LangChain chains as REST APIs.LangSmith: A developer platform that lets you debug, test, evaluate, and monitor LLM applications.noteThese docs focus on the Python LangChain library.Head herefor docs on the JavaScript LangChain library.Tutorials​If you're looking to build something specific or are more of a hands-on learner, check out ourtutorials section.\nThis is the best place to get started.These are the best ones to get started with:Build a Simple LLM ApplicationBuild a ChatbotBuild an AgentIntroduction to LangGraphExplore the full list of LangChain tutorialshere, and check out otherLangGraph tutorials here. To learn more about LangGraph, check out our first LangChain Academy course,Introduction to LangGraph, availablehere.How-to guides​Hereyou’ll find short answers to “How do I….?” types of questions.\nThese how-to guides don’t cover topics in depth – you’ll find that material in theTutorialsand theAPI Reference.\nHowever, these guides will help you quickly accomplish common tasks.Check outLangGraph-specific how-tos here.Conceptual guide​Introductions to all the key parts of LangChain you’ll need to know!Hereyou'll find high level explanations of all LangChain concepts.For a deeper dive into LangGraph concepts, check outthis page.API reference​Head to the reference section for full documentation of all classes and methods in the LangChain Python packages.Ecosystem​🦜🛠️ LangSmith​Trace and evaluate your language model applications and intelligent agents to help you move from prototype to production.🦜🕸️ LangGraph​Build stateful, multi-actor applications with LLMs. Integrates smoothly with LangChain, but can be used without it.Additional resources​Versions​See what changed in v0.3, learn how to migrate legacy code, read up on our versioning policies, and more.Security​Read up onsecuritybest practices to make sure you're developing safely with LangChain.Integrations​LangChain is part of a rich ecosystem of tools that integrate with our framework and build on top of it. Check out our growing list ofintegrations.Contributing​Check out the developer's guide for guidelines on contributing and help getting your dev environment set up.Was this page helpful?TutorialsHow-to guidesConceptual guideAPI referenceEcosystem🦜🛠️ LangSmith🦜🕸️ LangGraphAdditional resourcesVersionsSecurityIntegrationsContributing"
  },
  {
    "url": "https://python.langchain.com/docs/get_started/introduction#additional-resources",
    "content": "On this pageLangChainis a framework for developing applications powered by large language models (LLMs).LangChain simplifies every stage of the LLM application lifecycle:Development: Build your applications using LangChain's open-sourcebuilding blocks,components, andthird-party integrations.\nUseLangGraphto build stateful agents with first-class streaming and human-in-the-loop support.Productionization: UseLangSmithto inspect, monitor and evaluate your chains, so that you can continuously optimize and deploy with confidence.Deployment: Turn your LangGraph applications into production-ready APIs and Assistants withLangGraph Cloud.Concretely, the framework consists of the following open-source libraries:langchain-core: Base abstractions and LangChain Expression Language.langchain-community: Third party integrations.Partner packages (e.g.langchain-openai,langchain-anthropic, etc.): Some integrations have been further split into their own lightweight packages that only depend onlangchain-core.langchain: Chains, agents, and retrieval strategies that make up an application's cognitive architecture.LangGraph: Build robust and stateful multi-actor applications with LLMs by modeling steps as edges and nodes in a graph. Integrates smoothly with LangChain, but can be used without it.LangServe: Deploy LangChain chains as REST APIs.LangSmith: A developer platform that lets you debug, test, evaluate, and monitor LLM applications.noteThese docs focus on the Python LangChain library.Head herefor docs on the JavaScript LangChain library.Tutorials​If you're looking to build something specific or are more of a hands-on learner, check out ourtutorials section.\nThis is the best place to get started.These are the best ones to get started with:Build a Simple LLM ApplicationBuild a ChatbotBuild an AgentIntroduction to LangGraphExplore the full list of LangChain tutorialshere, and check out otherLangGraph tutorials here. To learn more about LangGraph, check out our first LangChain Academy course,Introduction to LangGraph, availablehere.How-to guides​Hereyou’ll find short answers to “How do I….?” types of questions.\nThese how-to guides don’t cover topics in depth – you’ll find that material in theTutorialsand theAPI Reference.\nHowever, these guides will help you quickly accomplish common tasks.Check outLangGraph-specific how-tos here.Conceptual guide​Introductions to all the key parts of LangChain you’ll need to know!Hereyou'll find high level explanations of all LangChain concepts.For a deeper dive into LangGraph concepts, check outthis page.API reference​Head to the reference section for full documentation of all classes and methods in the LangChain Python packages.Ecosystem​🦜🛠️ LangSmith​Trace and evaluate your language model applications and intelligent agents to help you move from prototype to production.🦜🕸️ LangGraph​Build stateful, multi-actor applications with LLMs. Integrates smoothly with LangChain, but can be used without it.Additional resources​Versions​See what changed in v0.3, learn how to migrate legacy code, read up on our versioning policies, and more.Security​Read up onsecuritybest practices to make sure you're developing safely with LangChain.Integrations​LangChain is part of a rich ecosystem of tools that integrate with our framework and build on top of it. Check out our growing list ofintegrations.Contributing​Check out the developer's guide for guidelines on contributing and help getting your dev environment set up.Was this page helpful?TutorialsHow-to guidesConceptual guideAPI referenceEcosystem🦜🛠️ LangSmith🦜🕸️ LangGraphAdditional resourcesVersionsSecurityIntegrationsContributing"
  },
  {
    "url": "https://python.langchain.com/docs/get_started/introduction#versions",
    "content": "On this pageLangChainis a framework for developing applications powered by large language models (LLMs).LangChain simplifies every stage of the LLM application lifecycle:Development: Build your applications using LangChain's open-sourcebuilding blocks,components, andthird-party integrations.\nUseLangGraphto build stateful agents with first-class streaming and human-in-the-loop support.Productionization: UseLangSmithto inspect, monitor and evaluate your chains, so that you can continuously optimize and deploy with confidence.Deployment: Turn your LangGraph applications into production-ready APIs and Assistants withLangGraph Cloud.Concretely, the framework consists of the following open-source libraries:langchain-core: Base abstractions and LangChain Expression Language.langchain-community: Third party integrations.Partner packages (e.g.langchain-openai,langchain-anthropic, etc.): Some integrations have been further split into their own lightweight packages that only depend onlangchain-core.langchain: Chains, agents, and retrieval strategies that make up an application's cognitive architecture.LangGraph: Build robust and stateful multi-actor applications with LLMs by modeling steps as edges and nodes in a graph. Integrates smoothly with LangChain, but can be used without it.LangServe: Deploy LangChain chains as REST APIs.LangSmith: A developer platform that lets you debug, test, evaluate, and monitor LLM applications.noteThese docs focus on the Python LangChain library.Head herefor docs on the JavaScript LangChain library.Tutorials​If you're looking to build something specific or are more of a hands-on learner, check out ourtutorials section.\nThis is the best place to get started.These are the best ones to get started with:Build a Simple LLM ApplicationBuild a ChatbotBuild an AgentIntroduction to LangGraphExplore the full list of LangChain tutorialshere, and check out otherLangGraph tutorials here. To learn more about LangGraph, check out our first LangChain Academy course,Introduction to LangGraph, availablehere.How-to guides​Hereyou’ll find short answers to “How do I….?” types of questions.\nThese how-to guides don’t cover topics in depth – you’ll find that material in theTutorialsand theAPI Reference.\nHowever, these guides will help you quickly accomplish common tasks.Check outLangGraph-specific how-tos here.Conceptual guide​Introductions to all the key parts of LangChain you’ll need to know!Hereyou'll find high level explanations of all LangChain concepts.For a deeper dive into LangGraph concepts, check outthis page.API reference​Head to the reference section for full documentation of all classes and methods in the LangChain Python packages.Ecosystem​🦜🛠️ LangSmith​Trace and evaluate your language model applications and intelligent agents to help you move from prototype to production.🦜🕸️ LangGraph​Build stateful, multi-actor applications with LLMs. Integrates smoothly with LangChain, but can be used without it.Additional resources​Versions​See what changed in v0.3, learn how to migrate legacy code, read up on our versioning policies, and more.Security​Read up onsecuritybest practices to make sure you're developing safely with LangChain.Integrations​LangChain is part of a rich ecosystem of tools that integrate with our framework and build on top of it. Check out our growing list ofintegrations.Contributing​Check out the developer's guide for guidelines on contributing and help getting your dev environment set up.Was this page helpful?TutorialsHow-to guidesConceptual guideAPI referenceEcosystem🦜🛠️ LangSmith🦜🕸️ LangGraphAdditional resourcesVersionsSecurityIntegrationsContributing"
  },
  {
    "url": "https://python.langchain.com/docs/get_started/introduction#security",
    "content": "On this pageLangChainis a framework for developing applications powered by large language models (LLMs).LangChain simplifies every stage of the LLM application lifecycle:Development: Build your applications using LangChain's open-sourcebuilding blocks,components, andthird-party integrations.\nUseLangGraphto build stateful agents with first-class streaming and human-in-the-loop support.Productionization: UseLangSmithto inspect, monitor and evaluate your chains, so that you can continuously optimize and deploy with confidence.Deployment: Turn your LangGraph applications into production-ready APIs and Assistants withLangGraph Cloud.Concretely, the framework consists of the following open-source libraries:langchain-core: Base abstractions and LangChain Expression Language.langchain-community: Third party integrations.Partner packages (e.g.langchain-openai,langchain-anthropic, etc.): Some integrations have been further split into their own lightweight packages that only depend onlangchain-core.langchain: Chains, agents, and retrieval strategies that make up an application's cognitive architecture.LangGraph: Build robust and stateful multi-actor applications with LLMs by modeling steps as edges and nodes in a graph. Integrates smoothly with LangChain, but can be used without it.LangServe: Deploy LangChain chains as REST APIs.LangSmith: A developer platform that lets you debug, test, evaluate, and monitor LLM applications.noteThese docs focus on the Python LangChain library.Head herefor docs on the JavaScript LangChain library.Tutorials​If you're looking to build something specific or are more of a hands-on learner, check out ourtutorials section.\nThis is the best place to get started.These are the best ones to get started with:Build a Simple LLM ApplicationBuild a ChatbotBuild an AgentIntroduction to LangGraphExplore the full list of LangChain tutorialshere, and check out otherLangGraph tutorials here. To learn more about LangGraph, check out our first LangChain Academy course,Introduction to LangGraph, availablehere.How-to guides​Hereyou’ll find short answers to “How do I….?” types of questions.\nThese how-to guides don’t cover topics in depth – you’ll find that material in theTutorialsand theAPI Reference.\nHowever, these guides will help you quickly accomplish common tasks.Check outLangGraph-specific how-tos here.Conceptual guide​Introductions to all the key parts of LangChain you’ll need to know!Hereyou'll find high level explanations of all LangChain concepts.For a deeper dive into LangGraph concepts, check outthis page.API reference​Head to the reference section for full documentation of all classes and methods in the LangChain Python packages.Ecosystem​🦜🛠️ LangSmith​Trace and evaluate your language model applications and intelligent agents to help you move from prototype to production.🦜🕸️ LangGraph​Build stateful, multi-actor applications with LLMs. Integrates smoothly with LangChain, but can be used without it.Additional resources​Versions​See what changed in v0.3, learn how to migrate legacy code, read up on our versioning policies, and more.Security​Read up onsecuritybest practices to make sure you're developing safely with LangChain.Integrations​LangChain is part of a rich ecosystem of tools that integrate with our framework and build on top of it. Check out our growing list ofintegrations.Contributing​Check out the developer's guide for guidelines on contributing and help getting your dev environment set up.Was this page helpful?TutorialsHow-to guidesConceptual guideAPI referenceEcosystem🦜🛠️ LangSmith🦜🕸️ LangGraphAdditional resourcesVersionsSecurityIntegrationsContributing"
  },
  {
    "url": "https://python.langchain.com/docs/get_started/introduction#integrations",
    "content": "On this pageLangChainis a framework for developing applications powered by large language models (LLMs).LangChain simplifies every stage of the LLM application lifecycle:Development: Build your applications using LangChain's open-sourcebuilding blocks,components, andthird-party integrations.\nUseLangGraphto build stateful agents with first-class streaming and human-in-the-loop support.Productionization: UseLangSmithto inspect, monitor and evaluate your chains, so that you can continuously optimize and deploy with confidence.Deployment: Turn your LangGraph applications into production-ready APIs and Assistants withLangGraph Cloud.Concretely, the framework consists of the following open-source libraries:langchain-core: Base abstractions and LangChain Expression Language.langchain-community: Third party integrations.Partner packages (e.g.langchain-openai,langchain-anthropic, etc.): Some integrations have been further split into their own lightweight packages that only depend onlangchain-core.langchain: Chains, agents, and retrieval strategies that make up an application's cognitive architecture.LangGraph: Build robust and stateful multi-actor applications with LLMs by modeling steps as edges and nodes in a graph. Integrates smoothly with LangChain, but can be used without it.LangServe: Deploy LangChain chains as REST APIs.LangSmith: A developer platform that lets you debug, test, evaluate, and monitor LLM applications.noteThese docs focus on the Python LangChain library.Head herefor docs on the JavaScript LangChain library.Tutorials​If you're looking to build something specific or are more of a hands-on learner, check out ourtutorials section.\nThis is the best place to get started.These are the best ones to get started with:Build a Simple LLM ApplicationBuild a ChatbotBuild an AgentIntroduction to LangGraphExplore the full list of LangChain tutorialshere, and check out otherLangGraph tutorials here. To learn more about LangGraph, check out our first LangChain Academy course,Introduction to LangGraph, availablehere.How-to guides​Hereyou’ll find short answers to “How do I….?” types of questions.\nThese how-to guides don’t cover topics in depth – you’ll find that material in theTutorialsand theAPI Reference.\nHowever, these guides will help you quickly accomplish common tasks.Check outLangGraph-specific how-tos here.Conceptual guide​Introductions to all the key parts of LangChain you’ll need to know!Hereyou'll find high level explanations of all LangChain concepts.For a deeper dive into LangGraph concepts, check outthis page.API reference​Head to the reference section for full documentation of all classes and methods in the LangChain Python packages.Ecosystem​🦜🛠️ LangSmith​Trace and evaluate your language model applications and intelligent agents to help you move from prototype to production.🦜🕸️ LangGraph​Build stateful, multi-actor applications with LLMs. Integrates smoothly with LangChain, but can be used without it.Additional resources​Versions​See what changed in v0.3, learn how to migrate legacy code, read up on our versioning policies, and more.Security​Read up onsecuritybest practices to make sure you're developing safely with LangChain.Integrations​LangChain is part of a rich ecosystem of tools that integrate with our framework and build on top of it. Check out our growing list ofintegrations.Contributing​Check out the developer's guide for guidelines on contributing and help getting your dev environment set up.Was this page helpful?TutorialsHow-to guidesConceptual guideAPI referenceEcosystem🦜🛠️ LangSmith🦜🕸️ LangGraphAdditional resourcesVersionsSecurityIntegrationsContributing"
  },
  {
    "url": "https://python.langchain.com/docs/get_started/introduction#contributing",
    "content": "On this pageLangChainis a framework for developing applications powered by large language models (LLMs).LangChain simplifies every stage of the LLM application lifecycle:Development: Build your applications using LangChain's open-sourcebuilding blocks,components, andthird-party integrations.\nUseLangGraphto build stateful agents with first-class streaming and human-in-the-loop support.Productionization: UseLangSmithto inspect, monitor and evaluate your chains, so that you can continuously optimize and deploy with confidence.Deployment: Turn your LangGraph applications into production-ready APIs and Assistants withLangGraph Cloud.Concretely, the framework consists of the following open-source libraries:langchain-core: Base abstractions and LangChain Expression Language.langchain-community: Third party integrations.Partner packages (e.g.langchain-openai,langchain-anthropic, etc.): Some integrations have been further split into their own lightweight packages that only depend onlangchain-core.langchain: Chains, agents, and retrieval strategies that make up an application's cognitive architecture.LangGraph: Build robust and stateful multi-actor applications with LLMs by modeling steps as edges and nodes in a graph. Integrates smoothly with LangChain, but can be used without it.LangServe: Deploy LangChain chains as REST APIs.LangSmith: A developer platform that lets you debug, test, evaluate, and monitor LLM applications.noteThese docs focus on the Python LangChain library.Head herefor docs on the JavaScript LangChain library.Tutorials​If you're looking to build something specific or are more of a hands-on learner, check out ourtutorials section.\nThis is the best place to get started.These are the best ones to get started with:Build a Simple LLM ApplicationBuild a ChatbotBuild an AgentIntroduction to LangGraphExplore the full list of LangChain tutorialshere, and check out otherLangGraph tutorials here. To learn more about LangGraph, check out our first LangChain Academy course,Introduction to LangGraph, availablehere.How-to guides​Hereyou’ll find short answers to “How do I….?” types of questions.\nThese how-to guides don’t cover topics in depth – you’ll find that material in theTutorialsand theAPI Reference.\nHowever, these guides will help you quickly accomplish common tasks.Check outLangGraph-specific how-tos here.Conceptual guide​Introductions to all the key parts of LangChain you’ll need to know!Hereyou'll find high level explanations of all LangChain concepts.For a deeper dive into LangGraph concepts, check outthis page.API reference​Head to the reference section for full documentation of all classes and methods in the LangChain Python packages.Ecosystem​🦜🛠️ LangSmith​Trace and evaluate your language model applications and intelligent agents to help you move from prototype to production.🦜🕸️ LangGraph​Build stateful, multi-actor applications with LLMs. Integrates smoothly with LangChain, but can be used without it.Additional resources​Versions​See what changed in v0.3, learn how to migrate legacy code, read up on our versioning policies, and more.Security​Read up onsecuritybest practices to make sure you're developing safely with LangChain.Integrations​LangChain is part of a rich ecosystem of tools that integrate with our framework and build on top of it. Check out our growing list ofintegrations.Contributing​Check out the developer's guide for guidelines on contributing and help getting your dev environment set up.Was this page helpful?TutorialsHow-to guidesConceptual guideAPI referenceEcosystem🦜🛠️ LangSmith🦜🕸️ LangGraphAdditional resourcesVersionsSecurityIntegrationsContributing"
  }
]